from aiogram import Bot, executor, types, Dispatcher
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from db import Database


bot = Bot(token="5394783980:AAFmlnp_lWi3wzkFTNUhp1fKbv9btLB4-Bk")
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)
db = Database('db.db')

keyboard_menu = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(text="–ü—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—éü§ù")
        ]
    ], resize_keyboard=True
)


class register(StatesGroup):
    table_number = State()


@dp.message_handler(Command("start"))
async def getUsers(message: types.Message):
        await message.answer("–¢–µ–±—è –ø—Ä–∏–≤–µ—Å—Ç–≤—É–µ—Ç –±–æ—ÇüòÉ\n"
                                 "–¢–µ–±–µ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è üôå", reply_markup=keyboard_menu)

@dp.message_handler(text="–ü—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—éü§ù")
async def register_(message: types.Message):
    if not db.userExists(message.from_user.id):
        await message.answer("–¢—ã –ø–µ—Ä–µ—à–µ–ª –≤ –º–µ–Ω—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.\n"
                             "–í–≤–µ–¥–∏ —Å–≤–æ–π —Ç–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä ‚ö†")
        await register.table_number.set()
    else:
        await message.answer("–¢—ã —É–∂–µ –ø—Ä–æ—à–µ–ª —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!")

@dp.message_handler(state = register.table_number)
async def table(message: types.Message, state: FSMContext):
    answer = message.text

    await state.update_data(table_number=answer) #–ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø–∏—Å–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ table_number, –¥–∞–Ω–Ω—ã–µ - —Ç–∞–±–µ–ª—å–Ω—ã–π, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—Å–ª—ã–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    data = await state.get_data() #–∑–∞–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ —Ç–∞–±–ª–∏—á–∫—É –ë–î —Ç–∞–±–µ–ª—å–Ω—ã—Ö

    table_number = data.get('table_number') #–∑–∞–±–∏—Ä–∞–µ–º —Ç–∞–±–µ–ª—å–Ω—ã–π, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–ø–∏—Å–∞–ª —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    db.addUser(message.from_user.id, table_number)
    await state.finish()
    await message.answer("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã!")
#–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª, –∫–æ–≥–¥–∞ –¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –∑–∞–ø—É—â–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –±–æ—Ç
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)